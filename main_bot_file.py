  # –æ—á–µ–Ω—å –º–Ω–æ–≥–æ –∏–º–ø–æ—Ä—Ç–æ–≤

import pandas as pd

import matplotlib.pyplot as plt
from wordcloud import WordCloud

import nltk
from nltk.corpus import stopwords
from nltk.tokenize import word_tokenize

import re

import collections
from collections import Counter

from pymystem3 import Mystem


import requests
from pprint import pprint
session = requests.session()

  # –∑–¥–µ—Å—å —á–∏—Ç–∞—é —Ñ–∞–π–ª—ã
  # –∞) —Å–æ —Å–ø–∏—Å–∫–æ–º —Ñ–∞–º–∏–ª–∏–π —Ä—É—Å—Å–∫–∏—Ö –ø–∏—Å–∞—Ç–µ–ª–µ–π –¥–ª—è –º–æ–¥–µ—Ä–∞—Ü–∏–∏
with open('greats_list.txt', encoding='UTF-8') as infile:
    greats_list = infile.read().split(',')

  # –±) –¥–∞—Ç–∞—Ñ—Ä–µ–π–º —Å —Ñ–∞–º–∏–ª–∏—è–º–∏ –∏ —Ç–µ–∫—Å—Ç–∞–º–∏
df =  pd.read_csv('base.csv', encoding='utf=8')
authors = df['name'].tolist()
poem = df['text'].tolist()


  # —Ñ—É–Ω–∫—Ü–∏—è, —Ä–∏—Å—É—é—â–∞—è –æ–±–ª–∞–∫–æ
def clouds_func(message):
    bot.send_message(message.chat.id, text = 'C–µ–∫—É–Ω–¥–æ—á–∫—É, –ª–∏—Å—Ç–∞–µ–º —Å—Ç—Ä–∞–Ω–∏—á–∫–∏! üìñ')
    nltk.download('punkt')
    nltk.download('stopwords')
    stop_words = stopwords.words('russian')

    text = poem[authors.index(message.text)]
    text = re.sub(r'[^\w\s]\n\n','',text)

    word_tokenize(text)
    words = [w.lower() for w in word_tokenize(text) if w.isalpha()]
    words = [w for w in words if w not in stop_words]

    top = dict(Counter(words).most_common(30))
    all_top = list(top.keys())

    stop_words = stop_words + all_top
    words = [w.lower() for w in word_tokenize(text) if w.isalpha()]
    words = [w for w in words if w not in stop_words]

    m = Mystem()
    lemmas = ''.join(m.lemmatize(' '.join(words)))

    wordcloud = WordCloud(width = 400, height = 400,
                          background_color ='white', colormap = 'PiYG').generate(lemmas)

    plt.figure(figsize = (8, 8), facecolor = None) 
    plt.imshow(wordcloud, interpolation='bilinear') 
    plt.axis("off") 
    plt.tight_layout(pad = 0) 

    plt.savefig(f'wordcloud_{message.text}.png')
    bot.send_photo(message.chat.id, photo=open(f'wordcloud_{message.text}.png', 'rb'))
    bot.send_message(message.chat.id, text = '–ì–æ—Ç–æ–≤–æ! –¢–µ–ø–µ—Ä—å –º–æ–∂–µ—à—å –≤–≤–µ—Å—Ç–∏ –¥—Ä—É–≥—É—é —Ñ–∞–º–∏–ª–∏—é –∏–ª–∏ –¥–æ–±–∞–≤–∏—Ç—å –Ω–æ–≤—ã–π —Ç–µ–∫—Å—Ç —á–µ—Ä–µ–∑ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é üå∏')


  # —á–∏—Ç–∞–µ–º —Ç–æ–∫–µ–Ω –∏–∑ —Ñ–∞–π–ª–∞ (–∫–∞–∂–µ—Ç—Å—è, —Ç–∞–∫ –Ω–∞–¥–µ–∂–Ω–µ–µ)
with open('token.txt', encoding='UTF-8') as infile:
    token = infile.read()


  # –¥–∞–ª–µ–µ - –∫–æ–¥ —Å–∞–º–æ–≥–æ –±–æ—Ç–∞

import random
import telebot
from telebot import types

bot = telebot.TeleBot(token)

@bot.message_handler(commands=['start'])
  # –ø–µ—Ä–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ, –∫–æ—Ç–æ—Ä–æ–µ –ø–∏—à–µ—Ç –±–æ—Ç, –∏ –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –∫ –Ω–µ–º—É
def restart(message):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    markup.add(types.KeyboardButton('–ß—å–∏ –∫–Ω–∏–∂–∫–∏ –µ—Å—Ç—å? üí≠'), types.KeyboardButton('–•–æ—á—É –¥–æ–±–∞–≤–∏—Ç—å –∫–Ω–∏–∂–∫—É! üí≠'))
    hi_text = '–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –æ–±–ª–∞—á–Ω–æ–µ –∫–Ω–∏–≥–æ—Ö—Ä–∞–Ω–∏–ª–∏—â–µ! –¢—ã –º–æ–∂–µ—à—å –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –Ω–∞ –æ–±–ª–∞–∫–æ —Å–ª–æ–≤ –¥–ª—è –∫–Ω–∏–∂–µ–∫ –∏–∑ —Ö—Ä–∞–Ω–∏–ª–∏—â–∞ –∏–ª–∏ –¥–æ–±–∞–≤–∏—Ç—å —Å–≤–æ—é –∫–Ω–∏–∂–∫—É üíê\
                \n\nüìï –í—ã–±–µ—Ä–∏ —Ä–µ–∂–∏–º:\n\n'
    bot.send_message(message.chat.id, hi_text, reply_markup=markup, parse_mode="Markdown")


  # –ø–æ—Ç–æ–º –∏–¥—É—Ç —Ñ—É–Ω–∫—Ü–∏–∏, —Å –∫–æ—Ç–æ—Ä—ã–º–∏ —Ä–∞–±–æ—Ç–∞–µ—Ç –±–æ—Ç

  # —Ñ—É–Ω–∫—Ü–∏—è, –∫–æ—Ç–æ—Ä–∞—è –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç, —á—å–∏ –∫–Ω–∏–∂–∫–∏ –µ—Å—Ç—å –≤ –±–∞–∑–µ
def whois_mode(message):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    markup.add(types.KeyboardButton('–í –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é üíå'))
    ans_text = '‚ú®–°–µ–π—á–∞—Å —É –Ω–∞—Å –µ—Å—Ç—å —Ç–∞–∫–∏–µ –∞–≤—Ç–æ—Ä—ã:\n\n'
    authors = sorted(df['name'].tolist())
    for i in range(len(authors)):
        ans_text = ans_text + authors[i] + '\n'
    ans_text = ans_text + '\n' + '–•–æ—á–µ—à—å –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –Ω–∞ –æ–±–ª–∞–∫o —Å–ª–æ–≤? –¢–æ–≥–¥–∞ –≤–≤–µ–¥–∏ —Ñ–∞–º–∏–ª–∏—é –∞–≤—Ç–æ—Ä–∞! ‚ú®'
    bot.send_message(message.chat.id, text=ans_text, reply_markup=markup)


  # —Ñ—É–Ω–∫—Ü–∏—è, –∫–æ—Ç–æ—Ä–∞—è —Å–æ–ø—Ä–æ–≤–æ–∂–¥–∞–µ—Ç –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –¥–æ–∫—É–º–µ–Ω—Ç–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º
def adding_mode(message):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    markup.add(types.KeyboardButton('–í –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é üíå'))
    ans_text = '–£—Ä–∞! \n–ó–∞–≥—Ä—É–∑–∏ —Ñ–∞–π–ª —Å –∫–Ω–∏–≥–æ–π (–≤ —Ñ–æ—Ä–º–∞—Ç–µ txt, –≤ –∫–æ–¥–∏—Ä–æ–≤–∫–µ utf-8)üåπ'
    bot.send_message(message.chat.id, text=ans_text, reply_markup=markup)


  # —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è "–ø–æ–ª–æ–º–∫–∏" 
  # –µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤–Ω–∏–º–∞—Ç–µ–ª—å–Ω–æ —á–∏—Ç–∞–µ—Ç —É—Å–ª–æ–≤–∏–µ, –æ–Ω–∞ –≤—ã–ª–µ–∑–∞–µ—Ç —Ç–æ–ª—å–∫–æ –ø–æ—Å–ª–µ –≤–≤–æ–¥–∞ —Ñ–∞–º–∏–ª–∏–∏, –∫–æ—Ç–æ—Ä–æ–π –Ω–µ—Ç –≤ —Å–ø–∏—Å–∫–µ —Ä—É—Å—Å–∫–∏—Ö –ø–∏—Å–∞—Ç–µ–ª–µ–π 
  # –∞ –µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —á–∏—Ç–∞–µ—Ç –Ω–µ –≤–Ω–∏–º–∞—Ç–µ–ª—å–Ω–æ, —è –≤ —ç—Ç–æ–π –≤–µ—Ä—Å–∏–∏ —Å—á–∏—Ç–∞—é, —á—Ç–æ —ç—Ç–æ –≤–∏–Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
def not_in_lib_mode(message):
    no_text = '–û –Ω–µ—Ç, —á—Ç–æ-—Ç–æ –Ω–µ —Ç–æ! –í –∫–Ω–∏–≥–æ—Ö—Ä–∞–Ω–∏–ª–∏—â–µ –Ω–µ –∑–Ω–∞—é—Ç —Ç–∞–∫–æ–≥–æ –∞–≤—Ç–æ—Ä–∞ üíî\
        \n–ú—ã –Ω–µ –º–æ–∂–µ–º –¥–æ–±–∞–≤–∏—Ç—å –∫–Ω–∏–≥—É –≤ –±–∞–∑—É. –ù–æ –µ—Å–ª–∏ —Ö–æ—á–µ—à—å, –Ω–∞—Ä–∏—Å—É–µ–º –æ–±–ª–∞–∫–æ —Å–ª–æ–≤ –¥–ª—è –∑–∞–≥—Ä—É–∂–µ–Ω–Ω–æ–≥–æ —Ñ–∞–π–ª–∞.'
    bot.send_message(message.chat.id, no_text, reply_markup=markup2)



  # —Ñ—É–Ω–∫—Ü–∏—è, –ø—Ä–∏–Ω–∏–º–∞—é—â–∞—è –¥–æ–∫—É–º–µ–Ω—Ç —Å –∫–Ω–∏–≥–æ–π –∏ –∑–∞–ø–∏—Å—ã–≤–∞—é—â–∞—è –µ–≥–æ —Ç–µ–∫—Å—Ç –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é
@bot.message_handler(content_types=['document'])
def handle_file(message):
    global new_text
    file_id = message.document.file_id
    file_info = bot.get_file(file_id)
    downloaded_file = bot.download_file(file_info.file_path)

    with open('file.txt', 'wb') as new_file:
        new_file.write(downloaded_file)
    with open('file.txt', 'r') as file:
        new_text = file.read()
    bot.reply_to(message, '–£—Ä–∞, —É—Å–ø–µ—à–Ω–æ! –ê —Ç–µ–ø–µ—Ä—å –≤–≤–µ–¥–∏ —Ñ–∞–º–∏–ª–∏—é –∞–≤—Ç–æ—Ä–∞ üåπ')



  # —Ä–µ–∞–∫—Ü–∏—è –±–æ—Ç–∞ –Ω–∞ –¥–µ–π—Å—Ç–≤–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
@bot.message_handler(content_types=['text'])
def mode_main(message):
    global authors, poem, new_text
    
    if message.text == '–í –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é üíå':
        restart(message)        
   
    elif message.text == '–ß—å–∏ –∫–Ω–∏–∂–∫–∏ –µ—Å—Ç—å? üí≠':
        whois_mode(message)
   
    elif message.text == '–•–æ—á—É –¥–æ–±–∞–≤–∏—Ç—å –∫–Ω–∏–∂–∫—É! üí≠':
        adding_mode(message)
    
    elif message.text in authors:
        clouds_func(message)
    
    elif message.text in greats_list and message.text not in authors:
        bot.send_message(message.chat.id, text='–ü—Ä–µ–∫—Ä–∞—Å–Ω–æ, –º—ã –∫–∞–∫ —Ä–∞–∑ –∏—Å–∫–∞–ª–∏ —ç—Ç–æ–≥–æ –∞–≤—Ç–æ—Ä–∞! –î–æ–±–∞–≤–∏–ª–∏ –≤ –±–∞–∑—É, —Å–µ–π—á–∞—Å –Ω–∞—Ä–∏—Å—É–µ–º –æ–±–ª–∞—á–∫–æ üíò')
        
        poem.append(new_text)
        new_name = message.text
        authors.append(new_name)

        df.loc[len(df.index)] = [len(df.index), new_name, ' ', new_text]  
        df.to_csv('base.csv', header=None, mode='a+')

        clouds_func(message)
    
    elif message.text == '–•–æ—á—É!üíå':
        poem.append(new_text)
        new_name = message.text
        authors.append(new_name)
        clouds_func(message)
        poem.remove(new_text)
        authors.remove(new_name)
   
    else:
        not_in_lib_mode(message)

  # –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –ø–æ—Å–ª–µ —Ç–æ–≥–æ, –∫–æ–≥–¥–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤–≤–æ–¥–∏—Ç —Ñ–∞–º–∏–ª–∏—é –Ω–µ –∏–∑ –±–∞–∑—ã —Ä—É—Å—Å–∫–∏—Ö –ø–∏—Å–∞—Ç–µ–ª–µ–π 
markup2 = types.ReplyKeyboardMarkup(resize_keyboard=True)
markup2.add(types.KeyboardButton('–•–æ—á—É!üíå'), types.KeyboardButton('–í –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é üíå'))


  # –∏ –∑–∞–ø—É—Å–∫ –±–æ—Ç–∞
bot.polling(none_stop=True, interval=0)
